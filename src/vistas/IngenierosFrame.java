/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sql.Conexionsql;

/**
 *
 * @author USER
 */
public class IngenierosFrame extends javax.swing.JFrame {

    /**
     * Creates new form IngenierosFrame
     */
    public IngenierosFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Text_ID = new javax.swing.JTextField();
        Text_Name = new javax.swing.JTextField();
        Text_Especialidad = new javax.swing.JTextField();
        Box_Departamento = new javax.swing.JComboBox<>();
        btn_Insertar = new javax.swing.JButton();
        btn_Eliminar = new javax.swing.JButton();
        btn_Actualizar = new javax.swing.JButton();
        btn_Limpiar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        Ver = new javax.swing.JTable();
        btn_Visualizar = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("INGENIEROS");
        jLabel1.setIconTextGap(8);

        jLabel2.setText("ID:");

        jLabel3.setText("Nombre: ");

        jLabel4.setText("Especialidad:");

        jLabel5.setText("Departamento:");

        Text_ID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Text_IDActionPerformed(evt);
            }
        });

        Box_Departamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Departamentos" }));
        Box_Departamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Box_DepartamentoActionPerformed(evt);
            }
        });

        btn_Insertar.setText("Insertar");
        btn_Insertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_InsertarActionPerformed(evt);
            }
        });

        btn_Eliminar.setText("Eliminar");
        btn_Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_EliminarActionPerformed(evt);
            }
        });

        btn_Actualizar.setText("Actualizar");
        btn_Actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ActualizarActionPerformed(evt);
            }
        });

        btn_Limpiar.setText("Limpiar");
        btn_Limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_LimpiarActionPerformed(evt);
            }
        });

        Ver.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        Ver.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        Ver.setEnabled(false);
        Ver.setRowSelectionAllowed(false);
        Ver.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jScrollPane3.setViewportView(Ver);

        btn_Visualizar.setText("Visualizar");
        btn_Visualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_VisualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(35, 35, 35)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addGap(38, 38, 38)
                                                .addComponent(Text_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(Text_Name))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(49, 49, 49)
                                        .addComponent(btn_Insertar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btn_Eliminar)))
                                .addGap(88, 88, 88)
                                .addComponent(btn_Actualizar))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(114, 114, 114)
                                .addComponent(btn_Visualizar)
                                .addGap(97, 97, 97)
                                .addComponent(jLabel1)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(Text_Especialidad, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Box_Departamento, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 159, Short.MAX_VALUE))
                    .addComponent(jScrollPane3))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(308, 308, 308)
                .addComponent(btn_Limpiar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(btn_Visualizar))
                        .addGap(18, 18, 18)
                        .addComponent(btn_Limpiar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(Text_ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(Text_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btn_Eliminar)
                                .addComponent(btn_Insertar))
                            .addComponent(btn_Actualizar)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(Text_Especialidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(Box_Departamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Text_IDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Text_IDActionPerformed
    }//GEN-LAST:event_Text_IDActionPerformed

    private void btn_InsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_InsertarActionPerformed
        Connection conn = null;
        Statement st = null;
        ResultSet rs = null; // Para almacenar el resultado de la consulta
        String url = "jdbc:postgresql://localhost/bd_Proyecto";
        String usuario = "postgres";
        String clave = "1234";

        try {
            String id = Text_ID.getText(); // Obtener el valor del campo ID
            String nombre = Text_Name.getText(); // Obtener el valor del campo Nombre
            String especialidad = Text_Especialidad.getText(); // Obtener el valor del campo Especialidad
            String departamento = Box_Departamento.getSelectedItem().toString();

            // Establecer la conexión
            conn = DriverManager.getConnection(url, usuario, clave);

            // Obtener el ID del departamento
            String query = "SELECT id_departamento FROM departamento WHERE nombre = '" + departamento + "'";
            st = conn.createStatement();
            rs = st.executeQuery(query);

            // Verificar si se encontró el departamento y obtener su ID
            int id_departamento = -1; // Valor por defecto si no se encuentra el departamento
            if (rs.next()) {
                id_departamento = rs.getInt("id_departamento");
            } else {
                JOptionPane.showMessageDialog(null, "Departamento no encontrado", "Error", JOptionPane.ERROR_MESSAGE);
                return; // Salir del método si no se encontró el departamento
            }

            // Preparar la sentencia SQL de inserción con el ID del departamento
            String insertar = "INSERT INTO public.ingeniero (id_ingeniero, nombre, especialidad, departamento_asignado) "
                    + "VALUES ('" + id + "','" + nombre + "','" + especialidad + "'," + id_departamento + ")";

            // Ejecutar la inserción
            st.executeUpdate(insertar);
            JOptionPane.showMessageDialog(null, "Inserción Exitosa", "Insertar", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al insertar: " + e.getMessage(), "Insertar", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btn_InsertarActionPerformed

    private void btn_LimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_LimpiarActionPerformed
        Text_ID.setText("");
        Text_Name.setText("");
        Text_Especialidad.setText("");
    }//GEN-LAST:event_btn_LimpiarActionPerformed

    private void btn_EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_EliminarActionPerformed
        Connection conn = null;
        Statement st = null;
        String url = "jdbc:postgresql://localhost/bd_Proyecto";
        String usuario = "postgres";
        String clave = "1234";
        try {
            conn = DriverManager.getConnection(url, usuario, clave);
            String delete = "DELETE FROM public.ingeniero WHERE id_ingeniero='" + Text_ID.getText() + "'";
            st = conn.createStatement();
            st.executeUpdate(delete);
            st.close();
            conn.close();
            JOptionPane.showMessageDialog(null, "Eliminado Exitoso", "Eliminar", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al Eliminar: " + e, "Eliminar", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_EliminarActionPerformed

    private void btn_ActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ActualizarActionPerformed
        Connection conn = null;
        PreparedStatement statement = null;
        Statement st = null;

        String url = "jdbc:postgresql://localhost/bd_Proyecto";
        String usuario = "postgres";
        String clave = "1234";

        try {
            String id = Text_ID.getText(); // Obtener el valor del campo ID
            String nombre = Text_Name.getText(); // Obtener el valor del campo Nombre
            String especialidad = Text_Especialidad.getText(); // Obtener el valor del campo Especialidad
            String departamento = Box_Departamento.getSelectedItem().toString(); // Obtener el valor seleccionado del ComboBox de Departamento
            conn = DriverManager.getConnection(url, usuario, clave);
            String consultaDep = "SELECT id_departamento FROM public.departamento WHERE nombre = ?";
            try (PreparedStatement stmtDep = conn.prepareStatement(consultaDep)) {
                stmtDep.setString(1, departamento);
                ResultSet rsDep = stmtDep.executeQuery();
                if (!rsDep.next()) {
                    JOptionPane.showMessageDialog(null, "El departamento seleccionado no existe", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            String update = "UPDATE public.ingeniero SET nombre = ?, especialidad = ?, departamento_asignado = ? WHERE id_ingeniero = ?";
            statement = conn.prepareStatement(update);
            statement.setString(1, nombre);
            statement.setString(2, especialidad);
            statement.setString(3, "1");
            statement.setString(4, id);

            int filasActualizadas = statement.executeUpdate();
            System.out.println("Filas actualizadas: " + filasActualizadas);

            JOptionPane.showMessageDialog(null, "Actualización Exitosa", "Actualizar", JOptionPane.INFORMATION_MESSAGE);

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al actualizar: " + e.getMessage(), "Actualizar", JOptionPane.ERROR_MESSAGE);
        } finally {
            // Cerrar recursos en bloques finally
            try {
                if (statement != null) {
                    statement.close();
                }
                if (st != null) {
                    st.close();
                }
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_btn_ActualizarActionPerformed

    private void btn_VisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_VisualizarActionPerformed
        Connection conn = null;
        Statement leer = null;
        DefaultTableModel tabla = new DefaultTableModel();
        tabla.addColumn("ID");
        tabla.addColumn("Nombre");
        tabla.addColumn("Especialidad");
        tabla.addColumn("Departamento");
        Ver.setModel(tabla); // Establecer el modelo de la tabla Ver
        try {
            String url = "jdbc:postgresql://localhost/bd_Proyecto";
            String usuario = "postgres";
            String clave = "1234";
            conn = DriverManager.getConnection(url, usuario, clave);
            leer = conn.createStatement();
            ResultSet resultado = leer.executeQuery("SELECT id_ingeniero, nombre, especialidad, departamento_asignado FROM public.ingeniero");

            while (resultado.next()) {
                String idIngeniero = resultado.getString("id_ingeniero");
                String nombre = resultado.getString("nombre");
                String especialidad = resultado.getString("especialidad");
                String departamentoId = resultado.getString("departamento_asignado");
                ResultSet resultadoDep = leer.executeQuery("SELECT nombre FROM public.departamento WHERE id_departamento = '" + departamentoId + "'");

                if (resultadoDep.next()) {
                    String nombreDepartamento = resultadoDep.getString("nombre");
                    String[] datos = {idIngeniero, nombre, especialidad, nombreDepartamento};
                    tabla.addRow(datos);
                }
                resultadoDep.close();
            }
            leer.close();
            conn.close();
            JOptionPane.showMessageDialog(null, "Consulta Exitosa", "Consultar", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException e) {

        }
    }//GEN-LAST:event_btn_VisualizarActionPerformed

    private void Box_DepartamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Box_DepartamentoActionPerformed
        Connection conn = null;
        Statement leer = null;
        ResultSet resultSet = null;

        try {
            String url = "jdbc:postgresql://localhost/bd_Proyecto";
            String usuario = "postgres";
            String clave = "1234";

            conn = DriverManager.getConnection(url, usuario, clave);

            if (conn != null) {
                leer = conn.createStatement();
                resultSet = leer.executeQuery("SELECT nombre FROM departamento");

                // Si es para un JComboBox como Box_Departamento, limpiar antes de agregar nuevos items
                Box_Departamento.removeAllItems();

                while (resultSet.next()) {
                    String nombreDepartamento = resultSet.getString("nombre");
                    Box_Departamento.addItem(nombreDepartamento);
                }
            }

        } catch (SQLException e) {
            System.err.println("Error al conectar o consultar la base de datos: " + e.getMessage());
            e.printStackTrace();
        } finally {
            // Cerrar ResultSet, Statement y Connection en el orden correcto y manejar excepciones
            try {
                if (resultSet != null) {
                    resultSet.close();
                }
                if (leer != null) {
                    leer.close();
                }
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException e) {
                System.err.println("Error al cerrar los recursos: " + e.getMessage());
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_Box_DepartamentoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IngenierosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IngenierosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IngenierosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IngenierosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IngenierosFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Box_Departamento;
    private javax.swing.JTextField Text_Especialidad;
    private javax.swing.JTextField Text_ID;
    private javax.swing.JTextField Text_Name;
    private javax.swing.JTable Ver;
    private javax.swing.JButton btn_Actualizar;
    private javax.swing.JButton btn_Eliminar;
    private javax.swing.JButton btn_Insertar;
    private javax.swing.JButton btn_Limpiar;
    private javax.swing.JButton btn_Visualizar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
